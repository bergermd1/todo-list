(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>a});var o=n(537),r=n.n(o),c=n(645),i=n.n(c)()(r());i.push([t.id,"* {\n    padding: 0;\n    margin: 0;\n}\n\n.project {\n    border: solid thin;\n    display: inline-block;\n    padding: 10px;\n}\n\n.project-container {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    border: solid;\n}\n\n.check-list-container {\n    border: solid thin;\n}\n\n.details > li {\n    margin-left: 20px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;IACrB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,qCAAqC;IACrC,aAAa;AACjB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;AACrB",sourcesContent:["* {\n    padding: 0;\n    margin: 0;\n}\n\n.project {\n    border: solid thin;\n    display: inline-block;\n    padding: 10px;\n}\n\n.project-container {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    border: solid;\n}\n\n.check-list-container {\n    border: solid thin;\n}\n\n.details > li {\n    margin-left: 20px;\n}"],sourceRoot:""}]);const a=i},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,r,c){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(o)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(i[s]=!0)}for(var d=0;d<t.length;d++){var u=[].concat(t[d]);o&&i[u[0]]||(void 0!==c&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=c),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),e.push(u))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),c="/*# ".concat(r," */");return[e].concat([c]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var c={},i=[],a=0;a<t.length;a++){var s=t[a],d=o.base?s[0]+o.base:s[0],u=c[d]||0,l="".concat(d," ").concat(u);c[d]=u+1;var p=n(l),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(f);else{var m=r(f,o);o.byIndex=a,e.splice(a,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var c=o(t=t||[],r=r||{});return function(t){t=t||[];for(var i=0;i<c.length;i++){var a=n(c[i]);e[a].references--}for(var s=o(t,r),d=0;d<c.length;d++){var u=n(c[d]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}c=s}}},569:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var c=n.sourceMap;c&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var c=e[o]={id:o,exports:{}};return t[o](c,c.exports,n),c.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{var t=n(379),e=n.n(t),o=n(795),r=n.n(o),c=n(569),i=n.n(c),a=n(565),s=n.n(a),d=n(216),u=n.n(d),l=n(589),p=n.n(l),f=n(426),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=u(),e()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;const v=[];let A=0;function h(t,e,n,o,r){const c=A;return A++,{id:c,title:t,dueDate:e,description:n,priority:o,notes:r,todos:["Task 1","Task 2","Task 3"]}}function y(t){return v.filter((e=>e.id==t))[0]}function C(t){const e=document.createElement("div");e.classList.add("project"),e.setAttribute("data-id",t.id);const n=document.createElement("p");n.textContent=t.title;const o=document.createElement("p");o.textContent=t.dueDate;const r=document.createElement("button");r.textContent="View Project",r.classList.add("viewBtn");const c=document.createElement("button");return c.textContent="Remove Project",c.classList.add("removeBtn"),e.appendChild(n),e.appendChild(o),e.appendChild(r),e.appendChild(c),e}function b(){g(),function(){const t=[];return v.forEach((e=>{t.push(C(e))})),t}().forEach((t=>{document.querySelector(".projects-container").appendChild(t),t.querySelector(".removeBtn").addEventListener("click",(()=>{!function(t){const e=v.indexOf(y(t));console.log(e),console.log(v.filter((e=>e.id==t))),console.log(v[0]),v.splice(e,1)}(t.getAttribute("data-id")),b()})),t.querySelector(".viewBtn").addEventListener("click",(()=>{document.querySelector("#add-project-button").style.display="none",g(),function(t){const e=function(t){const e=document.createElement("div");e.classList.add("check-list-container");const n=document.createElement("ol");return n.textContent="Check list",n.classList.add("check-list"),e.appendChild(n),t.todos.forEach((t=>{const e=document.createElement("li");e.textContent=t,n.appendChild(e)})),e}(t),n=function(t){const e=document.createElement("div");e.classList.add("details-container");const n=document.createElement("ul");n.textContent="Details",n.classList.add("details"),e.appendChild(n);const o=function(t){const e=[],n={description:"Description",dueDate:"Due date",priority:"Priority",notes:"Notes"};for(let o in n){const r=document.createElement("li");r.textContent=n[o]+": "+t[o],e.push(r)}return e}(t);return o.forEach((t=>{n.append(t)})),e}(t);return[e,n,function(){const t=document.createElement("div");t.classList.add("buttons-container");const e=document.createElement("button");e.id="return-button",e.textContent="Return to projects page";const n=document.createElement("button");return n.id="add-task-button",n.textContent="Add task",n.addEventListener("click",(()=>{})),t.appendChild(e),t.appendChild(n),t}()]}(y(t.getAttribute("data-id"))).forEach((t=>{console.log(t),document.querySelector(".project-container").appendChild(t)})),document.querySelector("#return-button").addEventListener("click",(()=>{document.querySelector("#add-project-button").style.display="block",b()}))}))}))}function g(){document.querySelector(".projects-container").innerHTML="",document.querySelector(".project-container").innerHTML=""}window.onload=()=>{document.querySelector("#content").appendChild(function(){const t=document.createElement("button");return t.id="add-project-button",t.textContent="Add new project",t.addEventListener("click",(()=>{const t={};t.title=window.prompt("Title?"),t.description=window.prompt("Description?"),function(t){const e=new h(t.title,t.dueDate,t.description,t.priority,t.notes);v.push(e)}(t),b()})),t}());const t=document.createElement("div");t.classList.add("projects-container"),document.querySelector("#content").appendChild(t);const e=document.createElement("div");e.classList.add("project-container"),document.querySelector("#content").appendChild(e),function(){const t=new h("Blank project","12/31/2023","Blank description",0,"");v.push(t),C(t)}(),b()}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,